pipeline {
    agent none
    environment {
        CI = 'true'
    }
    stages {

        stage('Criar Container mycontainerregelcio01 e Clustes AKS') {
            agent {
                docker {
                    image 'mcr.microsoft.com/azure-cli'
                    args '-p 3000:3000 -p 5000:5000 --user root'
                }
            }
            steps {
                withCredentials([azureServicePrincipal(credentialsId: 'AzureLogin',
                    subscriptionIdVariable: 'SUBS_ID',
                    clientIdVariable: 'CLIENT_ID',
                    clientSecretVariable: 'CLIENT_SECRET',
                    tenantIdVariable: 'TENANT_ID')]) {
                    sh 'az login --service-principal -u $CLIENT_ID --password $CLIENT_SECRET --tenant $TENANT_ID'
                
                sh 'az aks install-cli'
                sh 'az group create --name myResourceGroup --location eastus'
                sh 'az acr create --resource-group myResourceGroup --name mycontainerregelcio01 --sku Basic' 
                sh 'az aks create --resource-group myResourceGroup --name myAKSCluster --node-count 2 --attach-acr mycontainerregelcio01 --generate-ssh-keys --service-principal $CLIENT_ID --client-secret $CLIENT_SECRET'
                sh 'az aks get-credentials --resource-group myResourceGroup --name myAKSCluster'
                sh 'kubectl get nodes'
                }
                
            }
        }


    }
}